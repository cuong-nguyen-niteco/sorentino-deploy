{"version":3,"sources":["api/constant/constant.controller.js"],"names":[],"mappings":";;;;;AAKA;;;;;QAcgB;QAIA;QAIA;QAIA;;AAzBhB;;;;AACA;;;;AACA;;;;;;AAEA,IAAI,gBAAgB,eAAK,SAAL,CAAe,sBAAO,IAAP,GAAc,mBAAd,CAA/B;AACJ,IAAI,gBAAgB,eAAK,SAAL,CAAe,gBAAgB,iBAAhB,CAA/B;AACJ,IAAI,eAAe,eAAK,SAAL,CAAe,gBAAgB,eAAhB,CAA9B;AACJ,IAAI,kBAAkB,eAAK,SAAL,CAAe,gBAAgB,kBAAhB,CAAjC;;AAEJ,IAAI,WAAW,KAAK,KAAL,CAAW,aAAG,YAAH,CAAgB,aAAhB,EAA+B,MAA/B,CAAX,CAAX;AACJ,IAAI,UAAU,KAAK,KAAL,CAAW,aAAG,YAAH,CAAgB,YAAhB,EAA8B,MAA9B,CAAX,CAAV;AACJ,IAAI,aAAa,KAAK,KAAL,CAAW,aAAG,YAAH,CAAgB,eAAhB,EAAiC,MAAjC,CAAX,CAAb;;AAEG,SAAS,WAAT,CAAqB,GAArB,EAA0B,GAA1B,EAA+B;AACpC,MAAI,IAAJ,CAAS,QAAT,EADoC;CAA/B;;AAIA,SAAS,aAAT,CAAuB,GAAvB,EAA4B,GAA5B,EAAiC;AACtC,MAAI,IAAJ,CAAS,UAAT,EADsC;CAAjC;;AAIA,SAAS,aAAT,CAAuB,GAAvB,EAA4B,GAA5B,EAAiC;AACtC,MAAI,IAAJ,CAAS,OAAT,EADsC;CAAjC;;AAIA,SAAS,UAAT,CAAoB,GAApB,EAAyB,GAAzB,EAA8B;AACnC,MAAI,OAAO,EAAP,CAD+B;AAEnC,OAAK,IAAI,IAAE,CAAF,EAAK,IAAE,QAAQ,QAAR,CAAiB,MAAjB,EAAyB,GAAzC,EAA8C;AAC5C,QAAI,OAAO,QAAQ,QAAR,CAAiB,CAAjB,CAAP,CADwC;AAE5C,QAAI,IAAI,MAAJ,CAAW,EAAX,IAAiB,KAAK,EAAL,EAAS;AAC5B,aAAO,IAAP,CAD4B;AAE5B,YAF4B;KAA9B;GAFF;;AAQA,MAAI,IAAJ,CAAS,IAAT,EAVmC;CAA9B","file":"api/constant/constant.controller.js","sourcesContent":["/**\n * Using Rails-like standard naming convention for endpoints.\n * GET     /api/things              ->  index\n */\n\n'use strict';\nimport fs from 'fs';\nimport path from 'path';\nimport config from './../../config/environment';\n\nvar ROOT_RESOURCE = path.normalize(config.root + '/server/resources');\nvar CONSTANT_FILE = path.normalize(ROOT_RESOURCE + '/sorentino.json');\nvar PRODUCT_FILE = path.normalize(ROOT_RESOURCE + '/product.json');\nvar COLLECTION_FILE = path.normalize(ROOT_RESOURCE + '/collection.json');\n\nvar constant = JSON.parse(fs.readFileSync(CONSTANT_FILE, 'utf8'));\nvar product = JSON.parse(fs.readFileSync(PRODUCT_FILE, 'utf8'));\nvar collection = JSON.parse(fs.readFileSync(COLLECTION_FILE, 'utf8'));\n\nexport function getConstant(req, res) {\n  res.json(constant);\n}\n\nexport function getCollection(req, res) {\n  res.json(collection);\n}\n\nexport function getAllProduct(req, res) {\n  res.json(product);\n}\n\nexport function getProduct(req, res) {\n  let data = {};\n  for (let i=0; i<product.products.length; i++) {\n    let prod = product.products[i];\n    if (req.params.id == prod.id) {\n      data = prod;\n      break;\n    }\n  }\n\n  res.json(data);\n}\n"],"sourceRoot":"/source/"}